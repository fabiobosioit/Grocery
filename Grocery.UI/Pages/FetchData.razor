@page "/fetchdata"
@inject IDataService _DataService

@if (_forecasts == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    if (_selectedItem != null)
    {
        <Detail Item="_selectedItem" OnCancel="Cancel" OnSave="SaveItem">
            <Fields>
                <div class="form-group">
                    <label>Summary</label>
                    <InputText @bind-Value="_selectedItem!.Summary" class="form-control" />
                    <ValidationMessage For="@(() => _selectedItem.Summary)" />
                </div>

                <div class="form-group">
                    <label>Date</label>
                    <InputDate @bind-Value="_selectedItem.Date" class="form-control" />
                    <ValidationMessage For="@(() => _selectedItem.Date)" />
                </div>

                <div class="form-group">
                    <label>Temperature C</label>
                    <InputNumber @bind-Value="_selectedItem.TemperatureC" class="form-control" />
                    <ValidationMessage For="@(() => _selectedItem.TemperatureC)" />
                </div>
            </Fields>
        </Detail>
    }
    else
    {
        <Grid TGrid="WeatherForecastListItem" Items="_forecasts" OnEdit="Edit" OnDelete="Delete" OnCreate="Create" />
    }
}

@code {
    private List<WeatherForecastListItem?>? _forecasts;
    private WeatherForecastDetail? _selectedItem = null;

    protected override async Task OnInitializedAsync()
    {
        await RefreshData();
    }

    private async Task RefreshData()
    {
        _forecasts = await _DataService.GetWeatherForecastsAsync();
    }

    private void Create()
    {
        _selectedItem = new WeatherForecastDetail()
            {
                Date = new DateTime(),
                Summary = "n.a.",
                TemperatureC = 0
            };
    }

    private async Task Edit(WeatherForecastListItem selected)
    {
        _selectedItem = await _DataService.GetWeatherForecastByIdAsync(selected.Id);
        // RefreshData();
        // _selectedItem = null;
    }

    private async Task SaveItem(WeatherForecastDetail item)
    {
        if (item.Id == 0)
        {
            await _DataService.Create(item);
        }
        else
        {
            await _DataService.Save(item);
        }
        await RefreshData();
        _selectedItem = null;
    }

    private async Task Delete(WeatherForecastListItem selected)
    {
        // _forecasts?.Remove(selected);
        await _DataService.Delete(selected.Id);
        await RefreshData();
        _selectedItem = null;
    }

    private void Cancel()
    {
        _selectedItem = null;
    }


}